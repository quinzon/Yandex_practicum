name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.12, 3.11, 3.12]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install wemake-python-styleguide flake8 flake8-html mypy --verbose

      - name: Create report directory
        run: |
          mkdir -p flake-report

      - name: Run flake8 and generate HTML report
        id: flake8_check
        run: |
          flake8 . --config=setup.cfg --format=html --htmldir=flake-report || echo "flake8 failed"

      - name: Upload HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: flake-report-${{ matrix.python-version }}
          path: flake-report/

      - name: Run mypy type check
        id: mypy_check
        run: |
          mypy . || echo "mypy failed"

      - name: Set exit code based on checks
        id: set_exit_code
        run: |
          if [[ "${{ steps.flake8_check.outcome }}" == "failure" || "${{ steps.mypy_check.outcome }}" == "failure" ]]; then
            echo "exit_code=1" >> $GITHUB_ENV
          else
            echo "exit_code=0" >> $GITHUB_ENV
          fi

      - name: Send Telegram notification
        if: always()
        run: |
          MESSAGE="Python CI for version ${{ matrix.python-version }}:<br>"
          
          if [[ "${{ steps.flake8_check.outcome }}" == "failure" ]]; then
            MESSAGE+="    flake8 - failed<br>"
          else
            MESSAGE+="    flake8 - success<br>"
          fi

          if [[ "${{ steps.mypy_check.outcome }}" == "failure" ]]; then
            MESSAGE+="    mypy - failed<br>"
          else
            MESSAGE+="    mypy - success<br>"
          fi

          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
               -d chat_id=${{ secrets.TELEGRAM_BOT_CHAT_ID }} \
               -d text="$MESSAGE" \
               -d parse_mode="HTML"

      - name: Exit with code from previous checks
        run: exit ${{ env.exit_code }}
